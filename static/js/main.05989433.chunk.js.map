{"version":3,"sources":["components/task.jsx","components/task-list.jsx","components/pages.jsx","App.js","index.js"],"names":["Task","props","react_default","a","createElement","className","key","task","id","type","defaultChecked","isDone","onClick","name","Date","toLocaleDateString","remove","TaskList","_ref","tasks","map","Pages","pageNumbers","totalPages","Math","ceil","totalTasks","tasksPerPage","i","push","class","paginate","curPage","disabled","number","length","App","target","_useState","useState","_useState2","Object","slicedToArray","setTasks","_useState3","_useState4","taskName","setTaskName","_useState5","_useState6","sortUpDisabled","setSortUpDisabled","_useState7","_useState8","sortDownDisabled","setSortDownDisabled","sortByDate","_ref2","lastChild","data","toConsumableArray","sort","b","_useState9","_useState10","sortAll","setSortAll","_useState11","_useState12","sortDone","setSortDone","_useState13","_useState14","sortUndone","setSortUndone","_useState15","_useState16","setSort","_useState17","_useState18","currentPage","setCurrentPage","lastTaskIndex","firstTaskIndex","pageNumber","document","getElementById","console","log","sortedTasks","useMemo","filter","currentTasks","slice","placeholder","value","onChange","onKeyDown","newTask","now","concat","cur_task","ReactDOM","createRoot","render","src_App"],"mappings":"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","file":"static/js/main.05989433.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function Task(props) {\r\n    const handleCheck = () => {\r\n        props.task.isDone = props.task.isDone ? false : true;\r\n    }\r\n\r\n    return (\r\n        <div className='task' key={props.task.id}>\r\n            <div className='left_side'>\r\n                <input \r\n                    type='checkbox' \r\n                    defaultChecked={props.task.isDone}\r\n                    onClick={handleCheck}\r\n                    />\r\n                <p>{props.task.name}</p>\r\n            </div>\r\n            \r\n            <div className='right_side'>\r\n                <span>{(new Date(props.task.id)).toLocaleDateString()}</span>\r\n                <input \r\n                    type='button' \r\n                    className='trashcan' \r\n                    onClick={() => props.remove(props.task)}    \r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport Task from './task';\r\n\r\n\r\nexport default function TaskList({tasks, remove}) {\r\n\r\n    return (\r\n        <div className='tasks_list'>\r\n            {tasks.map(task =>\r\n                <Task remove={remove} task={task} key={task.id} />\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\n\n\nexport default function Pages(props) {\n    const pageNumbers = [];\n    const totalPages = Math.ceil(props.totalTasks / props.tasksPerPage);\n\n    for (let i = 1; i <= totalPages; i++) {\n        pageNumbers.push(i);\n    }\n    return (\n        <div class=\"page_number_container\">\n            <button \n                class=\"btn page_number\"\n                onClick={() => props.paginate((props.curPage - 1) ? \n                                        props.curPage - 1 : \n                                        1)}\n                id='<<'\n                disabled={props.curPage === 1 ? true : false}\n                >{'<<'}</button>\n            {pageNumbers.map(number => (\n                <button \n                    className=\"btn page_number\"\n                    disabled={props.curPage === number ? true : false}\n                    onClick={() => props.paginate(number)} id={number}>{number}</button>\n                )\n            )}\n            <button \n            class=\"btn page_number\"\n            onClick={() => props.paginate((props.curPage + 1 > pageNumbers.length) ? \n                                    props.curPage : \n                                    props.curPage + 1)}\n            id='>>'\n            disabled={(pageNumbers.length === 0 || props.curPage === pageNumbers.length) ? true : false}\n            >{'>>'}</button>\n        </div>\n\n    )\n}\n","import { __esModule } from '@testing-library/jest-dom/dist/matchers';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport TaskList from './components/task-list';\nimport Pages from './components/pages';\n\n\nfunction App({ target }) {\n  const [tasks, setTasks] = useState([]);\n  const [taskName, setTaskName] = useState('');\n\n  const addNewTask = (props) => {\n    if (props.key === 'Enter' && props.target.value) {\n      const newTask = {\n        id: Date.now(),\n        name: props.target.value,\n        isDone: false,\n      };\n      const sortDate = document.getElementById('↑');\n      if (sortDate.disabled)\n        setTasks([...tasks, newTask]);\n      else\n        setTasks([newTask, ...tasks])\n      setTaskName('');\n\n    }\n  };\n\n  const [sortUpDisabled, setSortUpDisabled] = useState(false);\n  const [sortDownDisabled, setSortDownDisabled] = useState(true);\n  const sortByDate = ({ target }) => {\n    if (target.lastChild.data === '↑') {\n      setTasks([...tasks].sort( (a, b) => a.id - b.id));\n      setSortUpDisabled(true);\n      setSortDownDisabled(false);\n    }\n    if (target.lastChild.data === '↓') {\n      setTasks([...tasks].sort( (a, b) => b.id - a.id));\n      setSortUpDisabled(false);\n      setSortDownDisabled(true);\n    }\n  }\n  // disabling sorting buttons\n  const [sortAll, setSortAll] = useState(true);\n  const [sortDone, setSortDone] = useState(false);\n  const [sortUndone, setSortUndone] = useState(false);\n  const [sort, setSort] = useState('all');\n  // --------------------------\n  const [currentPage, setCurrentPage] = useState(1)\n  const tasksPerPage = 5;\n  const lastTaskIndex = currentPage * tasksPerPage\n  const firstTaskIndex = lastTaskIndex - tasksPerPage\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber)\n    const curPage = document.getElementById(pageNumber)\n    console.log(curPage)};\n\n  const sortedTasks = useMemo( () => {\n    switch(sort) {\n      case 'all':\n        paginate(1);\n        setSortAll(true);\n        setSortDone(false);\n        setSortUndone(false);\n        return tasks;\n      case 'done':\n        paginate(1);\n        setSortAll(false);\n        setSortDone(true);\n        setSortUndone(false);\n        return tasks.filter( (task) => task.isDone);\n      case 'undone':\n        paginate(1);\n        setSortAll(false);\n        setSortDone(false);\n        setSortUndone(true);\n        return tasks.filter( (task) => !task.isDone)\n    }\n\n  }, [tasks, sort])\n\n  const currentTasks = sortedTasks.slice(firstTaskIndex, lastTaskIndex);\n\n  const removeTask = (task) => {\n    setTasks(tasks.filter((cur_task) => cur_task.id !== task.id));\n  };\n\n  return (\n    <div className='App'>\n      <h1>ToDo</h1>\n\n      <input\n        className=\"add_task\"\n        type='text' \n        placeholder='что бы я хотел сделать...'\n        value={taskName}\n        onChange={target => setTaskName(target.value)}\n        onKeyDown={addNewTask}\n      />\n\n      <div className=\"header_buttons\">\n          <div>\n          <button className='btn' disabled={sortAll} onClick={() => setSort('all')}>All</button>\n          <button className='btn' disabled={sortDone} onClick={() => setSort('done')}>Done</button>\n          <button className='btn' disabled={sortUndone} onClick={() => setSort('undone')} >Undone</button>\n          </div>\n          <div className=\"flex_date_sort\">\n              <span>Sort by date</span>\n              <button class=\"btn arrow_btn\" id='↑' disabled={sortUpDisabled} onClick={sortByDate}>↑</button>\n              <button class=\"btn arrow_btn\" disabled={sortDownDisabled} onClick={sortByDate}>↓</button>\n          </div>\n      </div>\n      \n        <TaskList remove={removeTask} tasks={currentTasks} />\n      <Pages \n        totalTasks={sortedTasks.length}\n        tasksPerPage={tasksPerPage}\n        paginate={paginate}\n        curPage={currentPage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <App />\n);\n\n"],"sourceRoot":""}