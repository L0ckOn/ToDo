{"version":3,"sources":["components/task.jsx","components/task-list.jsx","components/pages.jsx","App.js","index.js"],"names":["Task","props","react_default","a","createElement","className","key","task","id","type","defaultChecked","isDone","onClick","name","Date","toLocaleDateString","remove","TaskList","_ref","tasks","map","Pages","tasksPerPage","totalTasks","paginate","curPage","pageNumbers","i","Math","ceil","push","class","number","length","App","target","_useState","useState","_useState2","Object","slicedToArray","setTasks","_useState3","useRef","_useState4","taskName","setTaskName","sortByDate","_ref2","lastChild","data","toConsumableArray","sort","b","_useState5","_useState6","setSort","sortedTasks","useMemo","filter","_useState7","_useState8","currentPage","setCurrentPage","lastTaskIndex","firstTaskIndex","currentTasks","slice","placeholder","value","onChange","onKeyDown","newTask","now","concat","cur_task","pageNumber","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.31a7118e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function Task(props) {\r\n    const handleCheck = () => {\r\n        props.task.isDone = props.task.isDone ? false : true;\r\n    }\r\n\r\n    return (\r\n        <div className='task' key={props.task.id}>\r\n            <div className='left_side'>\r\n                <input \r\n                    type='checkbox' \r\n                    defaultChecked={props.task.isDone}\r\n                    onClick={handleCheck}\r\n                    />\r\n                <p>{props.task.name}</p>\r\n            </div>\r\n            \r\n            <div className='right_side'>\r\n                <span>{(new Date(props.task.id)).toLocaleDateString()}</span>\r\n                <input \r\n                    type='button' \r\n                    className='trashcan' \r\n                    onClick={() => props.remove(props.task)}    \r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport Task from './task';\r\n\r\n\r\nexport default function TaskList({tasks, remove}) {\r\n\r\n    return (\r\n        <div className='tasks_list'>\r\n            {tasks.map(task =>\r\n                <Task remove={remove} task={task} key={task.id} />\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, {useState, useMemo, useEffect} from 'react';\n\n\nexport default function Pages({tasksPerPage, totalTasks, paginate, curPage}) {\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(totalTasks / tasksPerPage); i++) {\n        pageNumbers.push(i);\n    }\n    return (\n        <div class=\"page_number_container\">\n            <button \n                class=\"btn page_number\"\n                onClick={() => paginate((curPage - 1) ? \n                                        curPage - 1 : \n                                        1)}\n                >{'<<'}</button>\n            {pageNumbers.map(number => (\n                <button \n                    className=\"btn page_number\"\n                    onClick={() => paginate(number)}>{number}</button>\n                )\n            )}\n            <button \n            class=\"btn page_number\"\n            onClick={() => paginate((curPage + 1 > pageNumbers.length) ? \n                                    curPage : \n                                    curPage + 1)}\n            >{'>>'}</button>\n        </div>\n\n    )\n}\n","import { __esModule } from '@testing-library/jest-dom/dist/matchers';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport TaskList from './components/task-list';\nimport Pages from './components/pages';\n\n\nfunction App({ target }) {\n  const [tasks, setTasks] = useState([]);\n  const allTasks = useRef([]);\n\n  const [taskName, setTaskName] = useState('');\n\n  const addNewTask = (props) => {\n    if (props.key === 'Enter' && props.target.value) {\n      const newTask = {\n        id: Date.now(),\n        name: props.target.value,\n        isDone: false,\n      };\n      setTasks([newTask, ...tasks]);\n      setTaskName('');\n    }\n  };\n\n  const sortByDate = ({ target }) => {\n    if (target.lastChild.data === '↑') {\n      setTasks([...tasks].sort( (a, b) => a.id - b.id))\n    }\n    if (target.lastChild.data === '↓') {\n      setTasks([...tasks].sort( (a, b) => b.id - a.id))\n    }\n  }\n\n  const [sort, setSort] = useState('all');\n\n  const sortedTasks = useMemo( () => {\n    switch(sort) {\n      case 'all':\n        return tasks;\n      case 'done':\n        return tasks.filter( (task) => task.isDone);\n      case 'undone':\n        return tasks.filter( (task) => !task.isDone)\n    }\n\n  }, [tasks, sort])\n\n  const removeTask = (task) => {\n    setTasks(tasks.filter((cur_task) => cur_task.id !== task.id));\n  };\n\n  const [currentPage, setCurrentPage] = useState(1)\n  const tasksPerPage = 5;\n  const lastTaskIndex = currentPage * tasksPerPage\n  const firstTaskIndex = lastTaskIndex - tasksPerPage\n  const currentTasks = sortedTasks.slice(firstTaskIndex, lastTaskIndex);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div className='App'>\n      <h1>ToDo</h1>\n\n      <input\n        className=\"add_task\"\n        type='text' \n        placeholder='что бы я хотел сделать...'\n        value={taskName}\n        onChange={target => setTaskName(target.value)}\n        onKeyDown={addNewTask}\n      />\n\n      <div className=\"header_buttons\">\n          <div>\n          <button className='btn' onClick={() => setSort('all')}>All</button>\n          <button className='btn' onClick={() => setSort('done')}>Done</button>\n          <button className='btn' onClick={() => setSort('undone')} >Undone</button>\n          </div>\n          <div className=\"flex_date_sort\">\n              <span>Sort by date</span>\n              <button class=\"btn arrow_btn\" onClick={sortByDate}>↑</button>\n              <button class=\"btn arrow_btn\" onClick={sortByDate}>↓</button>\n          </div>\n      </div>\n      \n        <TaskList remove={removeTask} tasks={currentTasks} />\n      <Pages \n        totalTasks={sortedTasks.length}\n        tasksPerPage={tasksPerPage}\n        paginate={paginate}\n        curPage={currentPage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <App />\n);\n\n"],"sourceRoot":""}